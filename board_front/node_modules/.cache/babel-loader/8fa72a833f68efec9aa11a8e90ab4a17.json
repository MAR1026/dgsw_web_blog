{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\web01board\\\\board_front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\web01board\\\\board_front\\\\src\\\\Board\\\\PostNew.js\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport { Redirect } from 'react-router-dom';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nlet PostNew = (_dec = inject('stores'), _dec(_class = observer(_class = (_temp = class PostNew extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addNewPost = async () => {\n      if (!window.confirm(\"작성하시겠습니까?\")) return;\n\n      if (this.props.postid && (await this.props.stores.postStore.editPost(this.state))) {\n        await this.props.stores.postStore.fetchItems();\n        this.setState(_objectSpread({}, this.state, {\n          goToMain: true\n        }));\n      } else if (await this.props.stores.postStore.addNewPost(this.state)) {\n        await this.props.stores.postStore.fetchItems();\n        this.setState(_objectSpread({}, this.state, {\n          goToMain: true\n        }));\n      }\n    };\n\n    this.updateTitle = event => {\n      this.setState(_objectSpread({}, this.state, {\n        title: event.target.value\n      }));\n    };\n\n    this.updateContent = (event, editor) => {\n      this.setState(_objectSpread({}, this.state, {\n        content: editor.getData()\n      }));\n    };\n\n    this.state = {\n      author: this.props.stores.userStore.user.id,\n      title: '',\n      content: '',\n      goToMain: false\n    };\n    if (this.props.postid && this.props.stores.postStore.viewItem !== null) this.state = _objectSpread({}, this.state, {\n      id: this.props.stores.postStore.viewItem.id,\n      title: this.props.stores.postStore.viewItem.title,\n      content: this.props.stores.postStore.viewItem.content\n    });\n  }\n\n  render() {\n    if (this.state.goToMain) return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\uC81C\\uBAA9: \", React.createElement(\"input\", {\n      value: this.state.title,\n      onChange: this.updateTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9:\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CKEditor, {\n      editor: ClassicEditor,\n      data: this.state.content,\n      onChange: this.updateContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\uD655\\uC778\")));\n  }\n\n}, _temp)) || _class) || _class);\nexport default PostNew;\n/*<textarea value={this.state.content} onChange={this.updateContent}/> */","map":{"version":3,"sources":["C:\\Users\\User\\IdeaProjects\\web01board\\board_front\\src\\Board\\PostNew.js"],"names":["React","Component","inject","observer","Redirect","CKEditor","ClassicEditor","PostNew","constructor","props","addNewPost","window","confirm","postid","stores","postStore","editPost","state","fetchItems","setState","goToMain","updateTitle","event","title","target","value","updateContent","editor","content","getData","author","userStore","user","id","viewItem","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n@inject('stores')\r\n@observer\r\nclass PostNew extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            author: this.props.stores.userStore.user.id,\r\n            title: '',\r\n            content: '',\r\n            goToMain: false\r\n        }\r\n\r\n        if (this.props.postid && this.props.stores.postStore.viewItem !== null)\r\n            this.state = {\r\n                ...this.state,\r\n                id: this.props.stores.postStore.viewItem.id,\r\n                title: this.props.stores.postStore.viewItem.title,\r\n                content: this.props.stores.postStore.viewItem.content,\r\n            };\r\n    }\r\n\r\n    render() {\r\n        if(this.state.goToMain)\r\n            return <Redirect to='/' />;\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    제목: <input value={this.state.title} onChange={this.updateTitle}/>\r\n                </div>\r\n                <div>\r\n                    내용:\r\n                    <div>\r\n\r\n                        <CKEditor editor={ClassicEditor}\r\n                            data={this.state.content}\r\n                            onChange={this.updateContent}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.addNewPost}>확인</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addNewPost = async () => {\r\n        if(!window.confirm(\"작성하시겠습니까?\"))\r\n            return;\r\n        if (this.props.postid && await this.props.stores.postStore.editPost(this.state)) {\r\n            await this.props.stores.postStore.fetchItems();\r\n            this.setState({\r\n                              ...this.state,\r\n                              goToMain: true\r\n                          });\r\n        }\r\n        else if(await this.props.stores.postStore.addNewPost(this.state)) {\r\n            await this.props.stores.postStore.fetchItems();\r\n            this.setState({\r\n                              ...this.state,\r\n                              goToMain: true\r\n                          });\r\n        }\r\n    }\r\n\r\n    updateTitle = event => {\r\n        this.setState( {\r\n            ...this.state,\r\n            title: event.target.value\r\n        });\r\n    }\r\n\r\n    updateContent = (event, editor) => {\r\n        this.setState( {\r\n                           ...this.state,\r\n                           content: editor.getData()\r\n                       });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default PostNew;\r\n\r\n/*<textarea value={this.state.content} onChange={this.updateContent}/> */"]},"metadata":{},"sourceType":"module"}