{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\web01board\\\\board_front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\web01board\\\\board_front\\\\src\\\\Board\\\\PostNew.js\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport { Redirect } from 'react-router-dom';\nlet PostNew = (_dec = inject('stores'), _dec(_class = observer(_class = (_temp = class PostNew extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: '',\n      userId: 1,\n      goToMain: false\n    };\n\n    this.addNewPost = async () => {\n      if (await this.props.stores.PostStore.addNewPost(this.state)) {\n        await this.props.stores.PostStore.fetchItems();\n        this.setState(_objectSpread({}, this.state, {\n          goToMain: true\n        }));\n      }\n    };\n\n    this.updateTitle = event => {\n      this.setState(_objectSpread({}, this.state, {\n        title: event.target.value\n      }));\n    };\n\n    this.updateContent = event => {\n      this.setState(_objectSpread({}, this.state, {\n        content: event.target.value\n      }));\n    };\n  }\n\n  render() {\n    if (this.state.goToMain) return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"\\uC81C\\uBAA9: \", React.createElement(\"input\", {\n      value: this.state.title,\n      onChange: this.updateTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9:\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      value: this.state.textarea,\n      onChange: this.updateContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addNewPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"\\uD655\\uC778\")));\n  }\n\n}, _temp)) || _class) || _class);\nexport default PostNew;","map":{"version":3,"sources":["C:\\Users\\User\\IdeaProjects\\web01board\\board_front\\src\\Board\\PostNew.js"],"names":["React","Component","inject","observer","Redirect","PostNew","state","title","content","userId","goToMain","addNewPost","props","stores","PostStore","fetchItems","setState","updateTitle","event","target","value","updateContent","render","textarea"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;IAIMC,O,WAFLH,MAAM,CAAC,QAAD,C,gBACNC,Q,mBADD,MAEME,OAFN,SAEsBJ,SAFtB,CAEgC;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,MAAM,EAAE,CAHJ;AAIJC,MAAAA,QAAQ,EAAE;AAJN,KADoB;;AAAA,SA8B5BC,UA9B4B,GA8Bf,YAAY;AACrB,UAAG,MAAM,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,SAAlB,CAA4BH,UAA5B,CAAuC,KAAKL,KAA5C,CAAT,EAA6D;AACzD,cAAM,KAAKM,KAAL,CAAWC,MAAX,CAAkBC,SAAlB,CAA4BC,UAA5B,EAAN;AACA,aAAKC,QAAL,mBACqB,KAAKV,KAD1B;AAEkBI,UAAAA,QAAQ,EAAE;AAF5B;AAIH;AACJ,KAtC2B;;AAAA,SAwC5BO,WAxC4B,GAwCdC,KAAK,IAAI;AACnB,WAAKF,QAAL,mBACO,KAAKV,KADZ;AAEIC,QAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaC;AAFxB;AAIH,KA7C2B;;AAAA,SA+C5BC,aA/C4B,GA+CZH,KAAK,IAAI;AACrB,WAAKF,QAAL,mBACsB,KAAKV,KAD3B;AAEmBE,QAAAA,OAAO,EAAEU,KAAK,CAACC,MAAN,CAAaC;AAFzC;AAIH,KApD2B;AAAA;;AAQ5BE,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKhB,KAAL,CAAWI,QAAd,EACI,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACQ;AAAO,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAAzB;AAAgC,MAAA,QAAQ,EAAE,KAAKU,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWiB,QAA5B;AAAsC,MAAA,QAAQ,EAAE,KAAKF,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CAJJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKV,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAVJ,CADJ;AAgBH;;AA5B2B,C;AA0DhC,eAAeN,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n@inject('stores')\r\n@observer\r\nclass PostNew extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        userId: 1,\r\n        goToMain: false\r\n    }\r\n\r\n    render() {\r\n        if(this.state.goToMain)\r\n            return <Redirect to='/' />;\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    제목: <input value={this.state.title} onChange={this.updateTitle}/>\r\n                </div>\r\n                <div>\r\n                    내용:\r\n                    <div>\r\n                        <textarea value={this.state.textarea} onChange={this.updateContent}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.addNewPost}>확인</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addNewPost = async () => {\r\n        if(await this.props.stores.PostStore.addNewPost(this.state)) {\r\n            await this.props.stores.PostStore.fetchItems();\r\n            this.setState({\r\n                              ...this.state,\r\n                              goToMain: true\r\n                          });\r\n        }\r\n    }\r\n\r\n    updateTitle = event => {\r\n        this.setState( {\r\n            ...this.state,\r\n            title: event.target.value\r\n        });\r\n    }\r\n\r\n    updateContent = event => {\r\n        this.setState( {\r\n                           ...this.state,\r\n                           content: event.target.value\r\n                       });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default PostNew;"]},"metadata":{},"sourceType":"module"}